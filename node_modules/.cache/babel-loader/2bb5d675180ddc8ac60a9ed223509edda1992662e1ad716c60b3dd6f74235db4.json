{"ast":null,"code":"var _jsxFileName = \"D:\\\\Chrome-Manager\\\\src\\\\components\\\\ExtensionsPage.jsx\";\nimport React from 'react';\n// Correct the import paths\nimport Card from '../ui/card';\nimport Button from '../ui/button';\nimport { FaVideo, FaDownload } from \"react-icons/fa\";\n\n// Define CardContent if it doesn't exist\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardContent = ({\n  children\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"card-content\",\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this);\n_c = CardContent;\nconst extensions = [{\n  name: \"Extension 1\",\n  zipLink: \"/files/extension1.zip\",\n  demoLink: \"https://example.com/demo1\",\n  instructions: \"Extract the zip file and load it in Chrome using 'Load unpacked' from the Extensions menu.\"\n}, {\n  name: \"Extension 2\",\n  zipLink: \"/files/extension2.zip\",\n  demoLink: \"https://example.com/demo2\",\n  instructions: \"After extracting, go to Chrome Extensions, enable Developer mode, and load the folder as an unpacked extension.\"\n}, {\n  name: \"Extension 3\",\n  zipLink: \"/files/extension3.zip\",\n  demoLink: \"https://example.com/demo3\",\n  instructions: \"Download the zip file, unzip it, and load the folder in Chrome Extensions using 'Load unpacked'.\"\n}];\nconst ExtensionCard = ({\n  name,\n  zipLink,\n  demoLink,\n  instructions\n}) => /*#__PURE__*/_jsxDEV(Card, {\n  className: \"p-4 rounded-2xl shadow-md mb-4\",\n  children: /*#__PURE__*/_jsxDEV(CardContent, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-2\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm mb-2\",\n      children: instructions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        asChild: true,\n        className: \"bg-blue-500 text-white hover:bg-blue-600\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: zipLink,\n          download: true,\n          children: [/*#__PURE__*/_jsxDEV(FaDownload, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 38\n          }, this), \" Download\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        asChild: true,\n        className: \"bg-green-500 text-white hover:bg-green-600\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: demoLink,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: [/*#__PURE__*/_jsxDEV(FaVideo, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 72\n          }, this), \" Demo Video\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 3\n}, this);\n_c2 = ExtensionCard;\nconst ExtensionsPage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6 text-center\",\n      children: \"Chrome Extensions Hub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), extensions.map((ext, index) => /*#__PURE__*/_jsxDEV(ExtensionCard, {\n      ...ext\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_c3 = ExtensionsPage;\nexport default ExtensionsPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CardContent\");\n$RefreshReg$(_c2, \"ExtensionCard\");\n$RefreshReg$(_c3, \"ExtensionsPage\");","map":{"version":3,"names":["React","Card","Button","FaVideo","FaDownload","jsxDEV","_jsxDEV","CardContent","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","extensions","name","zipLink","demoLink","instructions","ExtensionCard","asChild","href","download","target","rel","_c2","ExtensionsPage","map","ext","index","_c3","$RefreshReg$"],"sources":["D:/Chrome-Manager/src/components/ExtensionsPage.jsx"],"sourcesContent":["import React from 'react';\r\n// Correct the import paths\r\nimport Card from '../ui/card';\r\nimport Button from '../ui/button';\r\nimport { FaVideo, FaDownload } from \"react-icons/fa\";\r\n\r\n// Define CardContent if it doesn't exist\r\nconst CardContent = ({ children }) => (\r\n  <div className=\"card-content\">\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst extensions = [\r\n  {\r\n    name: \"Extension 1\",\r\n    zipLink: \"/files/extension1.zip\",\r\n    demoLink: \"https://example.com/demo1\",\r\n    instructions: \"Extract the zip file and load it in Chrome using 'Load unpacked' from the Extensions menu.\"\r\n  },\r\n  {\r\n    name: \"Extension 2\",\r\n    zipLink: \"/files/extension2.zip\",\r\n    demoLink: \"https://example.com/demo2\",\r\n    instructions: \"After extracting, go to Chrome Extensions, enable Developer mode, and load the folder as an unpacked extension.\"\r\n  },\r\n  {\r\n    name: \"Extension 3\",\r\n    zipLink: \"/files/extension3.zip\",\r\n    demoLink: \"https://example.com/demo3\",\r\n    instructions: \"Download the zip file, unzip it, and load the folder in Chrome Extensions using 'Load unpacked'.\"\r\n  }\r\n];\r\n\r\nconst ExtensionCard = ({ name, zipLink, demoLink, instructions }) => (\r\n  <Card className=\"p-4 rounded-2xl shadow-md mb-4\">\r\n    <CardContent>\r\n      <h2 className=\"text-xl font-bold mb-2\">{name}</h2>\r\n      <p className=\"text-sm mb-2\">{instructions}</p>\r\n      <div className=\"flex gap-2\">\r\n        <Button asChild className=\"bg-blue-500 text-white hover:bg-blue-600\">\r\n          <a href={zipLink} download><FaDownload className=\"mr-2\" /> Download</a>\r\n        </Button>\r\n        <Button asChild className=\"bg-green-500 text-white hover:bg-green-600\">\r\n          <a href={demoLink} target=\"_blank\" rel=\"noopener noreferrer\"><FaVideo className=\"mr-2\" /> Demo Video</a>\r\n        </Button>\r\n      </div>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nconst ExtensionsPage = () => {\r\n  return (\r\n    <div className=\"container mx-auto p-8\">\r\n      <h1 className=\"text-3xl font-bold mb-6 text-center\">Chrome Extensions Hub</h1>\r\n      {extensions.map((ext, index) => (\r\n        <ExtensionCard key={index} {...ext} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExtensionsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}