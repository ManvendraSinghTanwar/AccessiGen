{"ast":null,"code":"var _jsxFileName = \"D:\\\\Chrome-Manager\\\\src\\\\components\\\\ExtensionsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FaMoon, FaSun } from \"react-icons/fa\";\nimport themes from './themeConfig';\nimport ExtensionCard from './ExtensionCard';\nimport './ExtensionsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExtensionsPage = () => {\n  _s();\n  const [theme, setTheme] = useState('light');\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n    Object.entries(themes[newTheme]).forEach(([key, value]) => {\n      document.documentElement.style.setProperty(key, value);\n    });\n  };\n  const extensions = [{\n    name: \"Extension 1\",\n    zipLink: \"/files/extension1.zip\",\n    demoLink: \"https://example.com/demo1.mp4\",\n    instructions: \"Extract the zip file and load it in Chrome using 'Load unpacked'.\"\n  }, {\n    name: \"Extension 2\",\n    zipLink: \"/files/extension2.zip\",\n    demoLink: \"https://example.com/demo2.mp4\",\n    instructions: \"After extracting, enable Developer mode and load the folder as an unpacked extension.\"\n  }, {\n    name: \"Extension 3\",\n    zipLink: \"/files/extension3.zip\",\n    demoLink: \"https://example.com/demo3.mp4\",\n    instructions: \"Download the zip file, unzip it, and load the folder.\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AccesiGen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-theme-toggle\",\n        onClick: toggleTheme,\n        children: [theme === 'light' ? /*#__PURE__*/_jsxDEV(FaMoon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(FaSun, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 45\n        }, this), \" Toggle Theme\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extensions-grid\",\n      children: extensions.map((ext, index) => /*#__PURE__*/_jsxDEV(ExtensionCard, {\n        ...ext\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ExtensionsPage, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n_c = ExtensionsPage;\nexport default ExtensionsPage;\nvar _c;\n$RefreshReg$(_c, \"ExtensionsPage\");","map":{"version":3,"names":["React","useState","FaMoon","FaSun","themes","ExtensionCard","jsxDEV","_jsxDEV","ExtensionsPage","_s","theme","setTheme","toggleTheme","newTheme","Object","entries","forEach","key","value","document","documentElement","style","setProperty","extensions","name","zipLink","demoLink","instructions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","ext","index","_c","$RefreshReg$"],"sources":["D:/Chrome-Manager/src/components/ExtensionsPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { FaMoon, FaSun } from \"react-icons/fa\";\r\nimport themes from './themeConfig';\r\nimport ExtensionCard from './ExtensionCard';\r\nimport './ExtensionsPage.css';\r\n\r\nconst ExtensionsPage = () => {\r\n  const [theme, setTheme] = useState('light');\r\n\r\n  const toggleTheme = () => {\r\n    const newTheme = theme === 'light' ? 'dark' : 'light';\r\n    setTheme(newTheme);\r\n    Object.entries(themes[newTheme]).forEach(([key, value]) => {\r\n      document.documentElement.style.setProperty(key, value);\r\n    });\r\n  };\r\n\r\n  const extensions = [\r\n    { name: \"Extension 1\", zipLink: \"/files/extension1.zip\", demoLink: \"https://example.com/demo1.mp4\", instructions: \"Extract the zip file and load it in Chrome using 'Load unpacked'.\" },\r\n    { name: \"Extension 2\", zipLink: \"/files/extension2.zip\", demoLink: \"https://example.com/demo2.mp4\", instructions: \"After extracting, enable Developer mode and load the folder as an unpacked extension.\" },\r\n    { name: \"Extension 3\", zipLink: \"/files/extension3.zip\", demoLink: \"https://example.com/demo3.mp4\", instructions: \"Download the zip file, unzip it, and load the folder.\" }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"header\">\r\n        <h1>AccesiGen</h1>\r\n        <button className=\"btn-theme-toggle\" onClick={toggleTheme}>\r\n          {theme === 'light' ? <FaMoon /> : <FaSun />} Toggle Theme\r\n        </button>\r\n      </div>\r\n      <div className=\"extensions-grid\">\r\n        {extensions.map((ext, index) => (\r\n          <ExtensionCard key={index} {...ext} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExtensionsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,KAAK,QAAQ,gBAAgB;AAC9C,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,OAAO,CAAC;EAE3C,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAGH,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACrDC,QAAQ,CAACE,QAAQ,CAAC;IAClBC,MAAM,CAACC,OAAO,CAACX,MAAM,CAACS,QAAQ,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK;MACzDC,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAACL,GAAG,EAAEC,KAAK,CAAC;IACxD,CAAC,CAAC;EACJ,CAAC;EAED,MAAMK,UAAU,GAAG,CACjB;IAAEC,IAAI,EAAE,aAAa;IAAEC,OAAO,EAAE,uBAAuB;IAAEC,QAAQ,EAAE,+BAA+B;IAAEC,YAAY,EAAE;EAAoE,CAAC,EACvL;IAAEH,IAAI,EAAE,aAAa;IAAEC,OAAO,EAAE,uBAAuB;IAAEC,QAAQ,EAAE,+BAA+B;IAAEC,YAAY,EAAE;EAAwF,CAAC,EAC3M;IAAEH,IAAI,EAAE,aAAa;IAAEC,OAAO,EAAE,uBAAuB;IAAEC,QAAQ,EAAE,+BAA+B;IAAEC,YAAY,EAAE;EAAwD,CAAC,CAC5K;EAED,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBtB,OAAA;MAAKqB,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBtB,OAAA;QAAAsB,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB1B,OAAA;QAAQqB,SAAS,EAAC,kBAAkB;QAACM,OAAO,EAAEtB,WAAY;QAAAiB,QAAA,GACvDnB,KAAK,KAAK,OAAO,gBAAGH,OAAA,CAACL,MAAM;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAG1B,OAAA,CAACJ,KAAK;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAAC,eAC9C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACN1B,OAAA;MAAKqB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7BN,UAAU,CAACY,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACzB9B,OAAA,CAACF,aAAa;QAAA,GAAiB+B;MAAG,GAAdC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CAhCID,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AAkCpB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}